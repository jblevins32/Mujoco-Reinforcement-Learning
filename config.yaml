# Note: must use 'import gymnasium as gym' in all files, not 'import gym'

# Notes for training: 
# Must use continous rl algorithm if using continuous env and vice versa


# My simulation parameters
num_agents: 1
agent_radius: 1.5
map_size: [100,50]
num_obstacles: 5
obstacle_radius_max: 15
obstacle_cost: 5.0
dynamics: "single_integrator"  # "unicycle" or "double_integrator"
max_episode_steps: 256
communication_range: 10.0
observation_range: 10.0
centralized: False
dt: 0.05
w_dist: 1
w_coll: 1
w_dir: 1
w_goal: 1
done_threshold: 2
seed_value: 39

# Training specific parameters
num_environments: 64
epochs: 1500
t_steps: 256 # Number of rollouts per epoch
save_every: 250 # How many epochs to save the model (or adv_iters for adversarial training)
discount: 0.99
epsilon: 0.2
lr: .001
rl_alg: "PPO_CONT"

# Testing specific parameters
record_period: 1 # How many epochs to save the video
test_model_reward: "0.69075" # Final reward of saved model (to differentiate them)
test_steps: 1000

# Other parameters
space: "cont" # disc or cont depending on env
gym_model: "MRPP_Env" 
# Humanoid-v5 
# Pusher-v5
# HalfCheetah-v5 
# MountainCar-v0 
# CartPole-v1 
# Ant-v5 
# Swimmer-v5
# MRPP_Env

# Adversarial parameters
adv_iter: 30